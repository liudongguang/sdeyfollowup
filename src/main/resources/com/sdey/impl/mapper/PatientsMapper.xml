<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sdey.impl.mapper.PatientsMapper">
    <resultMap id="BaseResultMap" type="com.sdey.api.po.Patients">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="uid" jdbcType="INTEGER" property="uid"/>
        <result column="zyh" jdbcType="VARCHAR" property="zyh"/>
        <result column="zyhm" jdbcType="VARCHAR" property="zyhm"/>
        <result column="brxm" jdbcType="VARCHAR" property="brxm"/>
        <result column="csny" jdbcType="DATE" property="csny"/>
        <result column="age" jdbcType="VARCHAR" property="age"/>
        <result column="xb" jdbcType="VARCHAR" property="xb"/>
        <result column="cyks" jdbcType="VARCHAR" property="cyks"/>
        <result column="brbq" jdbcType="VARCHAR" property="brbq"/>
        <result column="ryrq" jdbcType="TIMESTAMP" property="ryrq"/>
        <result column="hkdz" jdbcType="VARCHAR" property="hkdz"/>
        <result column="lxdh" jdbcType="VARCHAR" property="lxdh"/>
        <result column="jtdh" jdbcType="VARCHAR" property="jtdh"/>
        <result column="cyrq" jdbcType="TIMESTAMP" property="cyrq"/>
        <result column="zgqk" jdbcType="VARCHAR" property="zgqk"/>
        <result column="zd" jdbcType="VARCHAR" property="zd"/>
        <result column="importDateStr" jdbcType="VARCHAR" property="importdatestr"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createtime"/>
    </resultMap>

    <select id="selectDisPatients" resultType="com.sdey.api.vo.ext.DisPatients"
            parameterType="com.sdey.api.vo.DisSearch">
        select a.*,b.uid as workid,b.workstate,b.managerid,b.excudenum,c.manyistate,dxlog.dxcontent,c.followupstate from sdeyfollowup.patients a left
        JOIN
        sdeyfollowup.managerwork b on a.uid=b.patientsid
        <![CDATA[
            left join (select a.pationtid,a.followupstate,a.manyistate from sdeyfollowup.followuplog a where not exists(select 1 from sdeyfollowup.followuplog
            where pationtid = a.pationtid and uid< a.uid)) c on a.uid=c.pationtid

            left join (SELECT dxlog.pationtid as dxpationtid,dxaccept.content as dxcontent FROM
            (select a.* from sdeyfollowup.followuplogmessage a where not exists(select 1 from sdeyfollowup.followuplogmessage where pationtid = a.pationtid and uid < a.uid)) dxlog
            left join  sdeyfollowup.messageaccept dxaccept on dxlog.receivestate=dxaccept.uid) dxlog on a.uid=dxlog.dxpationtid
          ]]>
        <where>
            <!--联系不上-->
            <if test="state!=null and state==3">
                c.followupstate=3
            </if>
            <if test="notAllotState==null">
                and b.excudenum is null
            </if>
            <if test="notAllotState!=null and notAllotState==1">
                and b.excudenum is not null
            </if>
            <if test="sessionUser!=null and sessionUser.name!='超级管理'">
                and b.managerid=#{sessionUser.uid}
            </if>
            <if test="state!=null and state==2">
                and b.workstate=1
            </if>
            <if test="state!=null and state==1">
                and b.workstate is null
            </if>
            <if test="ksid!=null and ksid!=''">
                and a.cyks=#{ksid}
            </if>
            <if test="patientName!=null and patientName!=''">
                and a.brxm like CONCAT(#{patientName},'%')
            </if>
            <if test="startTime!=null and endTime!=null">
                and a.cyrq between #{startTime} and #{endTime}
            </if>

        </where>
        order by a.uid
    </select>
    <select id="selectDisPatients2" resultType="com.sdey.api.vo.ext.DisPatients"
            parameterType="com.sdey.api.vo.DisSearch">
        select a.*,b.uid as workid,b.workstate,b.managerid,b.excudenum from sdeyfollowup.patients a left
        JOIN
        sdeyfollowup.managerwork b on a.uid=b.patientsid
        <!--联系不上-->
        <if test="state!=null and state==3">
            inner join( select pationtid from sdeyfollowup.followuplog where followupstate=3 group by pationtid ) lxbs on a.uid=lxbs.pationtid
        </if>
        <where>
            <if test="notAllotState==null">
                and b.excudenum is null
            </if>
            <if test="notAllotState!=null and notAllotState==1">
                and b.excudenum is not null
            </if>
            <if test="sessionUser!=null and sessionUser.name!='超级管理'">
                and b.managerid=#{sessionUser.uid}
            </if>
            <if test="state!=null and state==2">
                and b.workstate=1
            </if>
            <if test="state!=null and state==1">
                and b.workstate is null
            </if>
            <if test="ksid!=null and ksid!=''">
                and a.cyks=#{ksid}
            </if>
            <if test="patientName!=null and patientName!=''">
                and a.brxm like CONCAT(#{patientName},'%')
            </if>
            <if test="startTime!=null and endTime!=null">
                and a.cyrq between #{startTime} and #{endTime}
            </if>

        </where>
        order by a.uid
    </select>
    <select id="selectUidsByDate" resultType="java.lang.Integer">
        select uid from patients where importDateStr=#{importDateStr} order by cyrq
    </select>
    <select id="selectUidsByDatePlus" resultType="com.sdey.api.vo.ext.FenpeiWorkPlus">
          select uid as pationtID,cyks as ksName,zgqk,lxdh,jtdh from patients where importDateStr=#{importDateStr} order by cyrq
    </select>
    <select id="getListKsName" resultType="java.lang.String">
        select cyks from patients group by  cyks
    </select>
    <select id="getTongjiData" resultType="com.sdey.api.vo.tongji.TongjiData"
            parameterType="com.sdey.api.vo.tongji.GetTongjiDataParam">
        SELECT patient.uid as pationtid,patient.cyks,dxxq.content as dxcontent,dxxq.pationtid as dxpationtid,
        mwork.workstate as finishstate,mwork.excudenum as excudenum,dianhua.followupstate,dianhua.manyistate from patients patient
        LEFT JOIN
        (
        select sendmsg.pationtid,sendmsg.pationtphone,sendmsg.messagecontent,acceptmsg.content from
        (select a.* from followuplogmessage a,(select pationtid,min(uid) uid from followuplogmessage  group by pationtid) b where a.pationtid = b.pationtid and a.uid = b.uid)
        sendmsg LEFT JOIN
        (select a.* from messageaccept a,(select followuplogmessageid,min(uid) uid from messageaccept group by followuplogmessageid) b where a.followuplogmessageid = b.followuplogmessageid and a.uid = b.uid) acceptmsg on sendmsg.uid=acceptmsg.followuplogmessageid
        ) dxxq on patient.uid=dxxq.pationtid
        left join sdeyfollowup.managerwork mwork on patient.uid=mwork.patientsid
        LEFT JOIN (select a.* from followuplog a,(select pationtid,min(uid) uid from followuplog  group by pationtid) b where a.pationtid = b.pationtid and a.uid = b.uid) dianhua on patient.uid=dianhua.pationtid
        <where>
            patient.importDateStr=#{importDateStr}
            <if test="managerid!=null">
                and mwork.managerid=#{managerid}
            </if>
        </where>
        order by patient.uid
    </select>

    <select id="getAllMessageByTime" resultType="com.sdey.api.vo.EnterExportMsgRs" parameterType="com.sdey.api.vo.StatisticsMessageSearch">
        select bingren.uid,bingren.cyks,bingren.zyh,bingren.zyhm,bingren.brxm,bingren.csny,bingren.age,bingren.xb,bingren.ryrq,bingren.cyrq,bingren.zd,bingren.hkdz,fullmsg.messagecontent,fullmsg.pationtphone,fullmsg.content from patients bingren LEFT JOIN
        (
        select sendmsg.pationtid,sendmsg.pationtphone,sendmsg.messagecontent,acceptmsg.content from
        (select a.* from followuplogmessage a,(select pationtid,min(uid) uid from followuplogmessage  group by pationtid) b where a.pationtid = b.pationtid and a.uid = b.uid)
        sendmsg LEFT JOIN
        (select a.* from messageaccept a,(select followuplogmessageid,min(uid) uid from messageaccept group by followuplogmessageid) b where a.followuplogmessageid = b.followuplogmessageid and a.uid = b.uid) acceptmsg on sendmsg.uid=acceptmsg.followuplogmessageid
        )
            fullmsg ON bingren.uid=fullmsg.pationtid
            <where>
                <if test="startTime!=null and endTime!=null">
                    bingren.cyrq BETWEEN #{startTime} and #{endTime}
                </if>
                <if test="ksid!=null and ksid!=''">
                    and bingren.cyks=#{ksid,jdbcType=VARCHAR}
                </if>
            </where>
            order by bingren.cyrq desc
    </select>
</mapper>